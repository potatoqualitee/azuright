on: [push]
jobs:
  test-everywhere:
    name: Test Action on all platforms
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Create variables for module cacher
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v3.5
        with:
          modules-to-cache: Az.Storage
      - name: Run module cacher action
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}
      - name: Install PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        uses: potatoqualitee/psmodulecache@v3.5

      - name: Install Azurite
        id: azuright
        uses: potatoqualitee/azuright@initial
        with:
          self-signed-cert: true

      - name: Test
        shell: pwsh
        run: |
          Import-Module Az.Storage
          $connstring = "${{ steps.azuright.outputs.connstring }}"
          $blob = New-Object Azure.Storage.Blobs.BlobContainerClient($connstring, "sample-container")
          $blob.CreateIfNotExists()